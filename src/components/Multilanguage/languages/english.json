{
  "homeName": "I'm John",
  "homeFrom": "based in Manhattan, New York.",
  "homeAbout1": "I'm passionate about creating accessible, user-centered",
  "homeAbout2": "applications that enhance people's lives.",
  "homeAbout3": "I also love React.",
  "homeButtonText": "Take a look at my work",
  "navProjects": "Projects",
  "navAbout": "About",
  "navContact": "Contact",
  "projectsHeading": "Projects",
  "projectsSubheading": "(newest to oldest)",
  "viewSource": "View Source",
  "viewLiveVersion": "Live Site",
  "password": "Password",
  "technologiesUsed": "Technologies Used",
  "more": "More",
  "less": "Less",
  "aboutProject": "About",
  "oblHeading": "OnboardList's Blog Site",
  "oblSubheading": "A blog to increase user traffic and client sign up",
  "aboutObl1": "I signed an NDA for this, so I can't show the code. However, I can provide insight into my involvement thus far.",
  "aboutObl2": "The purpose of the blog site was to allow potential clients to sign up to trial OnboardList's onboarding SaaS, which was in its MVP phase.",
  "aboutObl3": "This undertaking required learning Next.js, TypeScript, and Sanity (a very new headless CMS). Using all three was a revelation to me. Features like server-side rendering, getInitialProps() to feed into components, and the routing immeidately jumped out to me and made everything so much faster, simpler, and efficient.",
  "aboutObl4": "Using Sanity and its GROQ querying language was also a fun experience. Sanity Studio's interface is so simple and accessible that the marketing team had no issues creating blog posts, especially once we set up Sanity's Block Content, which serialized the diverse content in each blog post.",
  "aboutObl5": "As for TypeScript, it was the experience that put the biggest smile on my face. Admittedly, I'm still learning and there was some getting used to earlier on, but I love how TypeScript forces you to not only write better code, but to understand your applicatiuon that much better. I look forward to getting better with TypeScript moving forth.",
  "oblFeature1": "Chakra UI w/ Theme Providers",
  "oblFeature2": "Sanity for Backend Data Management",
  "oblFeature3": "Deployed Using Vercel",
  "oblFeature4": "Server-Side Rendering",
  "oblFeature5": "Email Sign-Up Button With MailerLite Implementation",
  "oblFeature6": "React Hooks",
  "growopHeading": "Grow Op/G.DEN Android Application",
  "growopSubheading": "A mobile app that allows users to control their grow devices remotely",
  "aboutGrowOp1": "I also signed an NDA before joining. My involvement was during the company's early app development.",
  "aboutGrowOp2": "This was my first time working on a mobile application and using React Native and Redux.",
  "aboutGrowOp3": "Since I had experience with React, picking up React Native wasn't too difficult, save for learning new approaches to styling.",
  "aboutGrowOp4": "In the beginning I did a bunch of wireframing, while trying to get acclimated to the complex codebase.", 
  "aboutGrowOp5": "From there, I moved onto having to understand how data was sent to the application and how wifi networks worked and what the login process was like behind the scenes.",
  "aboutGrowOp6": "With this overview of the application and its data flow, I began working on how grow climate data, such as temperature, humidity, fan levels, lighting schedules would be gathered on the app and how it would display to users.",
  "aboutGrowOp7": "On top of that, I had to learn how to check for whether a grow device was actually a known unit or not, as well as where that device was in its setup stage so that we'd know whether there was even grow data to gather from it.",
  "aboutGrowOp8": "I used Redux's architecture to gather data via timestamps and the meter readings that accompanied them.",
  "aboutGrowOp9": "I then wrote tests to ensure data was being gathered correctly, and displayed them on graphs (using d3.js) and a React Native SVG package for the UI.",
  "aboutGrowOp10": "My time here really tested my ability to understand a complex, developing codebase, as well as my ability to see an application's complete architecture.",
  "aboutGrowOp11": "Additionally, I also worked on developing a bunch of UI components, as the application functioned as a market place, a forum, and for users to be able to save and apply different different gow configurations.",
  "growopFeature1": "Forum for the Grow Community",
  "growopFeature2": "Access grow history and single out specific grow data using graph interface",
  "growopFeature3": "UI Components w/ Real-Time Meter Readings from Grow Device(s)",
  "growopFeature4": "Lighting, Temperature, Fan, & Watering Control Buttons",
  "growopFeature5": "Login and Grow Configuration Forms",
  "travHeading": "Travelist Blog Site",
  "travSubheading": "A blog platform for travel lovers",
  "aboutTrav1": "This was a full-stack project to improve upon my skills in React, Node, PostgreSQL, Express, Git best practices, testing with Jest and Enzyme and so forth.",
  "aboutTrav2": "There's always a lot of things you learn to do better when you go at it over and over again. With my previous full-stack application, there were inefficiencies in the code, as I was still trying to get used to putting all my knowledge together. With this project, I felt like I had more control and wrote more efficient code.",
  "aboutTrav3": "If I had to pick one thing I felt I improved the most on here though, I think it would have to be writing tests with Jest and Enzyme. While I'm still developing my knowledge here, I LOVE writing tests. I love how thorough it forces you to be when thinking about how your application runs, and how each component or function works. It also forces you to understand edge cases. There's something really empowering about writing tests and making your code more predictable and manageable. As the risk of sounding cheesy, writing tests can be a beautiful thing.",
  "aboutTrav4": "The other improvements of note is building forms. There's so much that goes into building a form (state, security, validations, making api requests with JSON Web tokens, event bubbling etc...) that I built a stronger appreciation of how everything weaves into their development.",
  "aboutTrav5": "NOTE: There's always a lot to improve on, especially with this project. For example, I could update this to use React Hooks instead of React's Context Provider, and make functional components as opposed to class components. But I find that it's important to document those improvements. There's actually a ton you can learn about yourself looking over older code with a very critical eye. When self-critiquing, I like to write notes to myself as if I were advising a younger engineer.",
  "travFeature1": "User Registration and Login",
  "travFeature2": "JSON Web Token to Validate User API Requests",
  "travFeature3": "Create, Edit, Delete Blog Posts and Comments",
  "travFeature4": "Vote on Favorite Posts",
  "travFeature5": "Top Users List",
  "travFeature6": "Ticker with Latest Travel News",
  "travFeature7": "Logs Off If No user Activity Using Session Storage",
  "travFeature8": "Filtered Search of Posts",
  "stockHeading": "Stocked",
  "stockSubheading": "An inventory tracker",
  "aboutStock1": "My first attempt at a full-stack application.",
  "aboutStock2": "I had learned the PERN stack technologies separately, and so the challenge was to put it all together for the first time.",
  "aboutStock3": "The tougher aspects of the project came from setting up the project and working with Knex for building queries and then understanding how to serialize the data.",
  "aboutStock4": "Again, there are many things that can be improved upon this project. It's a pretty basic application, but a good project to get started with. If I were to make a similar app, I would definitely use React Hooks. It would do away with the large-ish context provider.",
  "stockFeature1": "Filtered Search",
  "stockFeature2": "Create, Edit, Delete Items",
  "stockFeature3": "Login and Registration w/ JSON Web Tokens",
  "stockFeature4": "User logoff due to inactivity",
  "livableHeading": "Livable",
  "livableSubheading": "A one-stop shop for the latest, location-specific census data",
  "aboutLivable1": "This jQuery application was heavily influences by the datausa.io site. I LOVE datausa.io's site. I can't stress that enough. To be able to search a location, get relevant, comprehensive data (education, crime rate, median household income) of that location and then have a UI that allows for location comparisons -- it's amazing. It's amazing because it's utilitiarian, practical, easy-to-use and understand and has a pleasing design. It's everything I look to when I think about an application.",
  "aboutLivable2": "So when I embarked on a project that finally let me play around with third-party APIs, I went a little nuts. To my knowledge there weren't any sources that provided free demographic data. It all required a hefty fee. But, there was one source that provided the data I needed, and it was the US Census Bureau's API. While certainly a wonderful source to obtain free data, the problem was it required a unique endpoint for each category of data. Thus, if you look into my code, you'll see a ton of API calls. Obviously this wouldn't be very efficient for a real application that serves actual customers, but for a project and for what I wanted, it was the only strategy I had. The two main issues I came across at the time with making so many API requests was 1. I wanted all the data to render at the same time, and 2. if one request failed, the user would receive an internal server error. To ameliorate this problem, each fetch request had its own catch for errors and if a category failed in its request, that category would just render an N/A. Additionally, as the user waits for data, a loading icon appears.",
  "aboutLivable3": "In the future, I'd like to create a similar application using a JS framework and add on a ton more features.",
  "livableFeature1": "Search County-Level Data via US Census Bureau API",
  "livableFeature2": "Lists Popular Locations via Google Maps API",
  "livableFeature3": "Responsive Design, with Cycling Images",
  "livableFeature4": "JavaScript Promises",
  "quizHeading": "Comic book Quiz App",
  "quizSubheading": "Quiz application for multiple choice answers",
  "aboutQuiz1": "My first application after playing around with tutorials. Even though it's a very simple application, I learned a ton and was very proud when I finished it. Simple things with css and simple logic that provides users with appropriate feedback based on if a question was correct or if they had enough questions correct to pass the quiz was very rewarding. I had an immense amount of fun making it.",
  "quizFeature1": "CSS Flexbox & CSS Grid",
  "quizFeature2": "Tracks User's Score",
  "quizFeature3": "Dynamic Images Based on Score",
  "quizFeature4": "Responsive Design",

  "mmaSubheading": "A personal activity and productivity tracker.",
  "aboutMma1": "A while ago, a friend of mine asked me if I could build a 'personal improvement' Webapp for him where he could track his activities and see where he spends his time on (productive tasks vs. unproductive tasks) so he could improve himself and his time management. It sounded boring at first, but the more I thought about it, the more I liked the idea because it's more 'interactive' than the Sites I've built before... and since I was looking for a new project idea anyways, I thought I'd go for it.",
  "aboutMma2": "Realistically, the App won't have many users, so learning to build a complete Backend for it would be too much - instead, I used Google Firebase Auth and Firestore as a Backend, which, in retrospect, were more than enough new technologies to learn at once. For Firebase auth, I stuck to a Tutorial by Rwieruch which was super helpful and teached me lots of things. While this project took me significantly longer than anticipated (because after Covid Lockdowns I started working full time again), it was SO much fun and although this wasn't my first React project, it finally 'clicked' to the point where I could work my way through the different Documentations to finish this project and had to google a lot less.",
  "aboutMma3": "There's also an android",
  "aboutMma4": "of it using Ionic Framweork Web Components.",
  "mmaFeature1": "User Authentication + Account",
  "mmaFeature2": "Settings (Password reset, change Email)",
  "mmaFeature3": "Customizable 'Quick Activities'",
  "mmaFeature4": "Customizable Profile + Banner Picture",
  "mmaFeature5": "Motivational Random Quote via API",
  "mmaFeature6": "Data Visualization via ApexCharts",
  "mmaFeature7": "Table overview (All Activities) incl. filtering",
  "mmaFeature8": "'Live Activities' (Stopwatch, Counter)",
  "mmaFeature9": "Manually enter activities with Date Picker",
  "krsHeading": "Travelist Blog Site",
  "krsSubheading": "A blog platform for travel lovers",
  "aboutKrs1": "Our family loves to cook - and since I use cooking websites frequently, and also use my grandfather's recipes frequently, I thought I'd make the best of both worlds and combine the two.",
  "aboutKrs2": "Kaufmanns Recipe Site (or 'Kaufmanns-Rezeptsammlung' in German) is a real Website with my grandfather's collection of ~180 phenomenal recipes collected over the last 50 years - some of which were even made by my great-great-grandmother. The recipes were once used in a Print-On-Demand book that was sold on Amazon KDP and a 237-page PDF version in print-ready quality of said book is available to download for free (make sure to use Dual Page Layout when reading). Since it's a 'real' Website including real-world content, everything is written in German.",
  "krsFeature1": "Over 180 real recipes from my grandfather",
  "krsFeature2": "Including 237 page Ebook made in Photoshop",
  "krsFeature3": "'Real' Website (German Content)",
  "krsFeature4": "11 Recipe Categories",
  "krsFeature5": "Contentful Database API",
  "krsFeature6": "Searchable Recipes",
  "krsFeature7": "Logic set up for X amount of recipes (expandable)",
  "krsFeature8": "Custom CSS and React-Bootstrap",
  "krsFeature9": "Social Media Share funtion",
  "ltSubheading": "A Mockup Travel Agency Site in React.",
  "aboutLt1": "My second attempt of using React. A mockup Travel agency Website that displays backend data from Contentful and lets the user filter through it. For each section (Double Economy, Beachfront Luxurious etc.) there is a Hero-component.",
  "aboutLt2": "The pictures are copyright-free pictures from Unsplash and may or may not be accurate representations of their categories and/or be related.",
  "aboutLt3": "The whole Project has been inspired by 'Coding Addicts' Youtube video, though I only got inspired by the Layout - everything else is built from scratch. In the end, I wanted to learn something and not just copy his code (which is most likely significantly more elegant than mine).",
  "aboutLt4": "Note: I did not 'beautify' the Code after months of gaining more knowledge (after all, I want to document my improvements), so the code quality is not up-to-date.",
  "ltFeature1": "Searchable Rooms (filtering)",
  "ltFeature2": "One 'Single Room' Component that accepts props (expandable)",
  "ltFeature3": "Realistic Looking Design",
  "gcSubheading": "A very simple Giphy Clone using their API.",
  "aboutGc1": "My first React Project that I built for training purposes.",
  "aboutGc2": "By default 'Trending' GIF's are pulled from the Giphy API and get displayed in a Flexbox grid. There's a search bar on top where users can input they Keyword and the content on the page gets re-rendered accordingly. It's a simple Site but it works perfectly.",
  "aboutGc3": "Note: I did not 'beautify' the Code after months of gaining more knowledge (after all, I want to document my improvements), so the code quality is not up-to-date.",
  "gcFeature1": "Searchable Giphy API",
  "gcFeature2": "Fully Responsive using Flexbox",
  "gcFeature3": "Modern Design",
  "spSubheading": "A customizable Startpage using Privacy-Friendly alternatives.",
  "aboutSp1": "Since I don't like the privacy-invading nature of Google and other big tech companies alike, I liked the idea of making a privacy Startpage which provides access to great open source alternatives without the need to look for them. Just add them to the Startpage and that's it.",
  "aboutSp2": "Available 'Widgets':",
  "spListItem1": "DuckDuckGo Search Bar",
  "spListItem2": "Openstreetmap (Openroute) Directions",
  "spListItem3": "WeatherWidget.io",
  "spListItem4": "Euronews WorldNews Widget",
  "spListItem5": "Invidious Search Bar",
  "spListItem6": "DeepL Translate Link",
  "aboutSp3": "Using Gridstack.js, every item (Search Bar, News Widget etc.) can be dragged, dropped and resized according to preference. The Grid can be locked and the Layout is stored in LocalStorage.",
  "aboutSp4": "The Site is not mobile-friendly on purpose as I saw no need for something like a Start Page on mobile.",
  "aboutSp5": "Even in hindsight, this project was a cool idea and a lot of fun. Still, after adding countless event listeners and onclick functions, I quickly saw the need for something like React.",
  "aboutSp6": "Note: I did not 'beautify' the Code after months of gaining more knowledge (after all, I want to document my improvements), so the code quality is not up-to-date.",
  "spFeature1": "Privacy-friendly 'Widgets'",
  "spFeature2": "Fully customizable",
  "spFeature3": "Layout stored in LocalStorage",
  "spFeature4": "DuckDuckGo instead of Google Search",
  "spFeature5": "OpenStreetMap instead of Google Maps",
  "spFeature6": "Invidous Frontend instead of Youtube",
  "jppHeading": "Joey's Pizza Place",
  "jppSubheading": "A mockup Single Page Website of a Restaurant",
  "aboutJpp1": "This was my first real project after leaving 'Tutorial Hell'.",
  "aboutJpp2": "A very simple Single Page Website using only HTML5 and CSS3 (and some Bootstrap for the Slideshow) that resembles a fictional Pizza and Pasta Restaurant called 'Joey's'.",
  "aboutJpp3": "Note: I did not 'beautify' the Code after months of gaining more knowledge (after all, I want to document my improvements), so the code quality is not up-to-date.",
  "jppFeature1": "Responsive",
  "jppFeature2": "Image Slideshow",
  "jppFeature3": "Attention to detail in funny descriptions",
  "contactMe": "Contact Me",
  "message": "Message",
  "nameRequired": "the name is required",
  "emailRequired": "the email is required",
  "messageRequired": "the message is required",
  "captchaRequired": "the recaptcha needs to be completed",
  "fieldRequired": "this field is required",
  "send": "Send",
  "goToPage": "Go to page",
  "of": "of",
  "successModalText": "Message sent! I'll be in touch shortly.",
  "whoIamHeading": "Who I am",
  "whoIamText1": "",
  "whoIamText2": "",
  "passions": "Passions",
  "codingHeading": "Coding",
  "codingText1": "What I love about coding is that it's constantly evolving.",
  "codingText2": "I'm the type of person who gets bored quickly when I feel that I have (semi-)mastered a field - but with coding there's always something new to learn. There's always a new technology, a new Framework, a new Library - and that's why I pick at least one new technology with every new project I start.",
  "writingHeading": "Writing",
  "dogsHeading": "Dogs",
  "dogsText1": "Ever since I was a child, I always wanted a dog. Since my parents were not fond of this idea, I volunteered at a regional animal shelter when I was an adult, which convinced me to get my own four-legged friend.",
  "dogsText2": "When I met my dog,",
  "dogsText3": ", there it was immediately clear that we belong together.",
  "dogsText4": "Through dogs I learned a lot about myself and after the experiences in the animal shelter and privately I even packed my collected knowledge in book form and started writing books.",
  "dogsText5": "To put it in the words of an unknown quote from the Internet:",
  "dogsText6": "Without a dog my house would be clean, my wallet would be full, but my heart would be empty.",
  "readNow": "Read Now",
  "acceptPrivacy": "I accept the",
  "privacyPolicy": "Privacy Policy",
  "cookieText1": "This website uses cookies to enhance the user experience.",
  "cookieText2": "Learn more.",
  "cookieAccept": "Accept",
  "contactFormCookieText1": "Because of Google ReCaptcha validation, it is essential that you give consent to store cookies. If you didn't accept it on purpose, you cannot use the contact form.",
  "contactFormCookieText2": "In this case, for further inquiries send an email to",
  "contactFormCookieText3": "If you've somehow missed the opportunity to give your cookie consent, you can",
  "contactFormCookieText4": "do it again."
}
